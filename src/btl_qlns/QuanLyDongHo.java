/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package btl_qlns;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author NGUYEN THI GIANG
 */
public class QuanLyDongHo extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyDongHo
     */
    private KetNoi ketNoi = new KetNoi();

    public QuanLyDongHo() {
        initComponents();
        loadData("select * from donghonuoc;");
    }

    public void loadData(String query) {
        DefaultTableModel model = (DefaultTableModel) tableDongHo.getModel();
        model.setRowCount(0);
        tableDongHo.setAutoCreateRowSorter(true);
        ResultSet rs = ketNoi.executeQuery(query);
        try {
            while (rs.next()) {
                Object[] rowData = {rs.getString(1), rs.getString(2), rs.getString(3)};
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Lỗi: " + ex.getMessage(), "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btThemDH = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableDongHo = new javax.swing.JTable();
        btSuaDH = new javax.swing.JButton();
        btXoaDH = new javax.swing.JButton();
        btInDH = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        txtHangSanXuat = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtChiSoDau = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtMaDongHo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btThemDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btThemDH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btThemDH.setText("Thêm đồng hồ");
        btThemDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemDHActionPerformed(evt);
            }
        });

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đồng hồ đo nước", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tableDongHo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã đồng hồ", "Hãng sản xuất", "Chỉ số đầu"
            }
        ));
        tableDongHo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDongHoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableDongHo);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        btSuaDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btSuaDH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit-text.png"))); // NOI18N
        btSuaDH.setText("Sửa đồng hồ");
        btSuaDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaDHActionPerformed(evt);
            }
        });

        btXoaDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btXoaDH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/file.png"))); // NOI18N
        btXoaDH.setText("Xoá đồng hồ");
        btXoaDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaDHActionPerformed(evt);
            }
        });

        btInDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btInDH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/printer.png"))); // NOI18N
        btInDH.setText("In danh sách");
        btInDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInDHActionPerformed(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đồng hồ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel14.setText("Chỉ số đầu:");

        jLabel12.setText("Mã đồng hồ:");

        jLabel13.setText("Hãng sản xuất:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(29, 29, 29)
                        .addComponent(txtChiSoDau, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtHangSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtMaDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtMaDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtHangSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtChiSoDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btInDH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btXoaDH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSuaDH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btThemDH))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btThemDH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btSuaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btXoaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btInDH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btThemDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemDHActionPerformed
        // TODO add your handling code here:
        if (txtMaDongHo.getText().equals("") || txtHangSanXuat.getText().equals("") || txtChiSoDau.getText().equals("")) {
            JOptionPane.showConfirmDialog(null, "Các trường nhập không được để trống!", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            ResultSet rs = ketNoi.executeQuery("select * from donghonuoc where madh = '" + txtMaDongHo.getText() + "';");
            if (rs.next()) {
                JOptionPane.showConfirmDialog(null, "Mã loại đã tồn tại! Mời bạn nhập mã loại khác", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            } else {
                ketNoi.executeUpdate("INSERT INTO `donghonuoc`(`madh`, `hangsx`, `chisodau`) VALUES ('" + txtMaDongHo.getText() + "', '" + txtHangSanXuat.getText() + "', " + txtChiSoDau.getText() + ");");
                loadData("select * from donghonuoc;");
            }
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Lỗi: " + ex.getMessage(), "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btThemDHActionPerformed

    private void tableDongHoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDongHoMouseClicked
        // TODO add your handling code here:
        int row = tableDongHo.getSelectedRow();
        if (row >= 0) {
            DefaultTableModel model = (DefaultTableModel) tableDongHo.getModel();
            txtMaDongHo.setText(model.getValueAt(row, 0).toString());
            txtHangSanXuat.setText(model.getValueAt(row, 1).toString());
            txtChiSoDau.setText(model.getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_tableDongHoMouseClicked

    private void btSuaDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaDHActionPerformed
        // TODO add your handling code here:
        if (txtMaDongHo.getText().equals("") || txtHangSanXuat.getText().equals("") || txtChiSoDau.getText().equals("")) {
            JOptionPane.showConfirmDialog(null, "Các trường nhập không được để trống!", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            if (!ketNoi.executeQuery("select * from donghonuoc where madh = '" + txtMaDongHo.getText() + "';").next()) {
                JOptionPane.showConfirmDialog(null, "Không tìm thấy thông tin cần sửa!", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            } else {
                ketNoi.executeUpdate("update donghonuoc set hangsx = '" + txtHangSanXuat.getText() + "', chisodau = " + txtChiSoDau.getText() + " where madh = '" + txtMaDongHo.getText() + "';");
                txtMaDongHo.setText("");
                txtHangSanXuat.setText("");
                txtChiSoDau.setText("");
                loadData("select * from donghonuoc;");
            }
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Lỗi: " + ex.getMessage(), "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btSuaDHActionPerformed

    private void btXoaDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaDHActionPerformed
        // TODO add your handling code here:
        if (txtMaDongHo.getText().equals("") || txtHangSanXuat.getText().equals("") || txtChiSoDau.getText().equals("")) {
            JOptionPane.showConfirmDialog(null, "Các trường nhập không được để trống!", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            if (!ketNoi.executeQuery("select * from donghonuoc where madh = '" + txtMaDongHo.getText() + "';").next()) {
                JOptionPane.showConfirmDialog(null, "Không tìm thấy thông tin cần xoá!", "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            } else {
                ketNoi.executeUpdate("delete from donghonuoc where madh = '" + txtMaDongHo.getText() + "';");
                txtMaDongHo.setText("");
                txtHangSanXuat.setText("");
                txtChiSoDau.setText("");
                loadData("select * from donghonuoc;");
            }
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Lỗi: " + ex.getMessage(), "Thông báo", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btXoaDHActionPerformed

    private void btInDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInDHActionPerformed
        // TODO add your handling code here:
        try {
            XSSFWorkbook wordkbook = new XSSFWorkbook();
            XSSFSheet sheet = wordkbook.createSheet("donghonuoc");
            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(2);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Danh sách đồng hồ nước");

            row = sheet.createRow(3);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã đồng hồ nước");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Hãng sản xuất");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Chỉ số đầu");

            for (int i = 0; i < tableDongHo.getRowCount(); i++) {
                //Modelbook book =arr.get(i);
                row = sheet.createRow(4 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(tableDongHo.getModel().getValueAt(i, 0).toString());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(tableDongHo.getModel().getValueAt(i, 1).toString());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(tableDongHo.getModel().getValueAt(i, 2).toString());

            }

            // Tạo một đối tượng JFileChooser
            JFileChooser fileChooser = new JFileChooser();

            // Tạo một bộ lọc cho phép chỉ chọn các file có đuôi là .xlsx
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files (*.xlsx)", "xlsx");
            fileChooser.setFileFilter(filter);

            // Hiển thị hộp thoại chọn file, và kiểm tra xem người dùng có chọn một file hay không
            int result = fileChooser.showSaveDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                // Lấy đường dẫn file được chọn
                File selectedFile = fileChooser.getSelectedFile();

                try {
                    // Ghi dữ liệu vào file
                    FileOutputStream fis = new FileOutputStream(selectedFile + ".xlsx");
                    wordkbook.write(fis);
                    fis.close();

                    // Hiển thị thông báo thành công
                    JOptionPane.showMessageDialog(null, "In thành công tại: " + selectedFile.getAbsolutePath());
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Loi mo file");
        }
    }//GEN-LAST:event_btInDHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInDH;
    private javax.swing.JButton btSuaDH;
    private javax.swing.JButton btThemDH;
    private javax.swing.JButton btXoaDH;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tableDongHo;
    private javax.swing.JTextField txtChiSoDau;
    private javax.swing.JTextField txtHangSanXuat;
    private javax.swing.JTextField txtMaDongHo;
    // End of variables declaration//GEN-END:variables
}
